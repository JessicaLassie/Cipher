/*
 * Copyright (C) Jessica LASSIE from 2020 to present
 * All rights reserved
 */
package fr.jl.cipher.view;

import fr.jl.cipher.controller.ControllerEncryption;
import fr.jl.cipher.controller.CryptingException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Jessica LASSIE
 */
public class JfEncryption extends javax.swing.JFrame {
    
    private static final String AES = "AES";
    private static final String RSA = "RSA";

    /**
     * Creates new form NewJFrame
     */
    public JfEncryption() {
        initComponents();
        
        buttonGroup.add(jRadioButtonDecrypt);
        buttonGroup.add(jRadioButtonEncrypt);
        jRadioButtonEncrypt.setSelected(true);
        jComboBoxEncrypt.addItem(AES);
        jComboBoxEncrypt.addItem(RSA);
        jDialogError.setSize(400, 140);
        jDialogError.setLocationRelativeTo(null);
        jDialogError.setIconImage(new ImageIcon("src\\fr\\jl\\cipher\\resources\\error_icon.png").getImage());
        jDialogSuccess.setSize(170, 140);
        jDialogSuccess.setLocationRelativeTo(null);
        jDialogSuccess.setIconImage(new ImageIcon("src\\fr\\jl\\cipher\\resources\\success_icon.png").getImage());
        jTextFieldSelectedFile.setEditable(false);
        jTextFieldSelectedKey.setEditable(false);
        //jButtonStart.setEnabled(false);
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon("src\\fr\\jl\\cipher\\resources\\cipher_icon.png").getImage());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jFileChooser = new javax.swing.JFileChooser();
        jDialogError = new javax.swing.JDialog();
        jLabelError = new javax.swing.JLabel();
        jButtonDialogError = new javax.swing.JButton();
        jDialogSuccess = new javax.swing.JDialog();
        jLabelSuccess = new javax.swing.JLabel();
        jButtonDialogSuccess = new javax.swing.JButton();
        jFileKeyChooser = new javax.swing.JFileChooser();
        jLabelFile = new javax.swing.JLabel();
        jButtonClearFile = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jRadioButtonEncrypt = new javax.swing.JRadioButton();
        jRadioButtonDecrypt = new javax.swing.JRadioButton();
        jComboBoxEncrypt = new javax.swing.JComboBox<>();
        jLabelEncrypt = new javax.swing.JLabel();
        jLabelKey = new javax.swing.JLabel();
        jButtonClearKey = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jTextFieldSelectedKey = new javax.swing.JTextField();
        jTextFieldSelectedFile = new javax.swing.JTextField();
        jButtonSearchFile = new javax.swing.JButton();
        jButtonSearchKey = new javax.swing.JButton();

        jDialogError.setTitle("Error");

        jLabelError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButtonDialogError.setText("OK");
        jButtonDialogError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDialogErrorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogErrorLayout = new javax.swing.GroupLayout(jDialogError.getContentPane());
        jDialogError.getContentPane().setLayout(jDialogErrorLayout);
        jDialogErrorLayout.setHorizontalGroup(
            jDialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogErrorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDialogError)
                .addGap(100, 100, 100))
        );
        jDialogErrorLayout.setVerticalGroup(
            jDialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButtonDialogError)
                .addContainerGap())
        );

        jDialogSuccess.setTitle("Success");

        jLabelSuccess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSuccess.setText("Success");

        jButtonDialogSuccess.setText("OK");
        jButtonDialogSuccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDialogSuccessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogSuccessLayout = new javax.swing.GroupLayout(jDialogSuccess.getContentPane());
        jDialogSuccess.getContentPane().setLayout(jDialogSuccessLayout);
        jDialogSuccessLayout.setHorizontalGroup(
            jDialogSuccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSuccessLayout.createSequentialGroup()
                .addGroup(jDialogSuccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogSuccessLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogSuccessLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jButtonDialogSuccess)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialogSuccessLayout.setVerticalGroup(
            jDialogSuccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSuccessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSuccess, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDialogSuccess)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cipher");
        setResizable(false);
        setSize(new java.awt.Dimension(431, 213));

        jLabelFile.setText("File *");

        jButtonClearFile.setText("X");
        jButtonClearFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearFileActionPerformed(evt);
            }
        });

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jRadioButtonEncrypt.setText("Encrypt");
        jRadioButtonEncrypt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonEncryptStateChanged(evt);
            }
        });
        jRadioButtonEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEncryptActionPerformed(evt);
            }
        });

        jRadioButtonDecrypt.setText("Decrypt");
        jRadioButtonDecrypt.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonDecryptStateChanged(evt);
            }
        });

        jLabelEncrypt.setText("Algorythm");

        jLabelKey.setText("Key");

        jButtonClearKey.setText("X");
        jButtonClearKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearKeyActionPerformed(evt);
            }
        });

        jTextFieldSelectedKey.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFieldSelectedKeyInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jTextFieldSelectedKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelectedKeyActionPerformed(evt);
            }
        });
        jTextFieldSelectedKey.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFieldSelectedKeyPropertyChange(evt);
            }
        });

        jTextFieldSelectedFile.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFieldSelectedFileInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jTextFieldSelectedFile.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFieldSelectedFilePropertyChange(evt);
            }
        });

        jButtonSearchFile.setText("...");
        jButtonSearchFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchFileActionPerformed(evt);
            }
        });

        jButtonSearchKey.setText("...");
        jButtonSearchKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jRadioButtonEncrypt)
                                .addGap(75, 75, 75)
                                .addComponent(jRadioButtonDecrypt))
                            .addComponent(jLabelEncrypt))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelKey)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxEncrypt, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldSelectedFile, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonSearchFile)
                                        .addGap(6, 6, 6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelFile)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextFieldSelectedKey, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonSearchKey)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonClearFile, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonClearKey, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonEncrypt)
                    .addComponent(jRadioButtonDecrypt))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEncrypt)
                .addGap(8, 8, 8)
                .addComponent(jComboBoxEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonClearKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSelectedKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSearchKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonClearFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSelectedFile)
                        .addComponent(jButtonSearchFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jButtonStart)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonClearFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearFileActionPerformed
        jTextFieldSelectedFile.setText("");
    }//GEN-LAST:event_jButtonClearFileActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        final String filePath = jTextFieldSelectedFile.getText();
        final String keyPath = jTextFieldSelectedKey.getText();
        switch (jComboBoxEncrypt.getSelectedItem().toString()) {
            case AES:
                try {
                    cryptingAES(filePath, keyPath);
                    jDialogSuccess.setVisible(true);
                } catch (IOException | InvalidKeyException | NoSuchAlgorithmException | BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException | CryptingException e) {
                    jDialogError.setVisible(true);
                    jLabelError.setText(e.getMessage());
                }
                break;
            case RSA:                
                try {
                    cryptingRSA(filePath, keyPath);
                    jDialogSuccess.setVisible(true);
                } catch (IOException | ClassNotFoundException | InvalidKeyException | NoSuchAlgorithmException | InvalidKeySpecException | BadPaddingException | IllegalBlockSizeException | NoSuchPaddingException e) {
                    jDialogError.setVisible(true);
                    jLabelError.setText(e.getMessage());
                }
                break;
            default :
                break;
        }
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jRadioButtonDecryptStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonDecryptStateChanged
        if (jRadioButtonDecrypt.isSelected()) {
            jLabelKey.setText("Key *");
            if (!jTextFieldSelectedFile.getText().equals("") && !jTextFieldSelectedKey.getText().equals("")) {
                //jButtonStart.setEnabled(true);
            } else {
                //jButtonStart.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jRadioButtonDecryptStateChanged

    private void jRadioButtonEncryptStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonEncryptStateChanged
        if (jRadioButtonEncrypt.isSelected()) {
            jLabelKey.setText("Key");
            if (!jTextFieldSelectedFile.getText().equals("")) {
                //jButtonStart.setEnabled(true);
            } else {
                //jButtonStart.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jRadioButtonEncryptStateChanged

    private void jButtonDialogErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDialogErrorActionPerformed
        jDialogError.setVisible(false);
    }//GEN-LAST:event_jButtonDialogErrorActionPerformed

    private void jButtonDialogSuccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDialogSuccessActionPerformed
        jDialogSuccess.setVisible(false);
    }//GEN-LAST:event_jButtonDialogSuccessActionPerformed

    private void jButtonClearKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearKeyActionPerformed
        jTextFieldSelectedKey.setText("");
    }//GEN-LAST:event_jButtonClearKeyActionPerformed

    private void jRadioButtonEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEncryptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonEncryptActionPerformed

    private void jButtonSearchFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchFileActionPerformed
        final int value = jFileChooser.showOpenDialog(this);
        if(value == JFileChooser.APPROVE_OPTION){
            jTextFieldSelectedFile.setText(jFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonSearchFileActionPerformed

    private void jButtonSearchKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchKeyActionPerformed
        final int value = jFileKeyChooser.showOpenDialog(this);
        if(value == JFileChooser.APPROVE_OPTION){
            jTextFieldSelectedKey.setText(jFileKeyChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonSearchKeyActionPerformed

    private void jTextFieldSelectedKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelectedKeyActionPerformed

    }//GEN-LAST:event_jTextFieldSelectedKeyActionPerformed

    private void jTextFieldSelectedKeyInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFieldSelectedKeyInputMethodTextChanged

    }//GEN-LAST:event_jTextFieldSelectedKeyInputMethodTextChanged

    private void jTextFieldSelectedKeyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextFieldSelectedKeyPropertyChange
        
    }//GEN-LAST:event_jTextFieldSelectedKeyPropertyChange

    private void jTextFieldSelectedFilePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextFieldSelectedFilePropertyChange

    }//GEN-LAST:event_jTextFieldSelectedFilePropertyChange

    private void jTextFieldSelectedFileInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFieldSelectedFileInputMethodTextChanged

    }//GEN-LAST:event_jTextFieldSelectedFileInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JfEncryption().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jButtonClearFile;
    private javax.swing.JButton jButtonClearKey;
    private javax.swing.JButton jButtonDialogError;
    private javax.swing.JButton jButtonDialogSuccess;
    private javax.swing.JButton jButtonSearchFile;
    private javax.swing.JButton jButtonSearchKey;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JComboBox<String> jComboBoxEncrypt;
    private javax.swing.JDialog jDialogError;
    private javax.swing.JDialog jDialogSuccess;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JFileChooser jFileKeyChooser;
    private javax.swing.JLabel jLabelEncrypt;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JLabel jLabelKey;
    private javax.swing.JLabel jLabelSuccess;
    private javax.swing.JRadioButton jRadioButtonDecrypt;
    private javax.swing.JRadioButton jRadioButtonEncrypt;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextFieldSelectedFile;
    private javax.swing.JTextField jTextFieldSelectedKey;
    // End of variables declaration//GEN-END:variables

    /**
     * Encrypt or decrypt in AES
     * @param filePath to encrypt or decrypt
     * @param keyFilePath to encrypt or decrypt
     */
    private void cryptingAES(final String filePath, final String keyFilePath) throws IOException, InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, CryptingException {
        if (jRadioButtonEncrypt.isSelected()) {
            int mode = Cipher.ENCRYPT_MODE;
            ControllerEncryption.encryptAES(mode, filePath, keyFilePath);
        }
        if (jRadioButtonDecrypt.isSelected()) {
            int mode = Cipher.DECRYPT_MODE;
            ControllerEncryption.decryptAES(mode, filePath, keyFilePath);
            
        }
    }

    /**
     * Encrypt or decrypt in RSA
     * @param filePath to encrypt or decrypt
     * @param keyFilePath to encrypt or decrypt
     */
    private void cryptingRSA(final String filePath, final String keyFilePath) throws InvalidKeySpecException, NoSuchAlgorithmException, IOException, InvalidKeyException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {
        if (jRadioButtonEncrypt.isSelected()) {
            int mode = Cipher.ENCRYPT_MODE;
            ControllerEncryption.encryptRSA(mode, filePath, keyFilePath);                  
        }
        if (jRadioButtonDecrypt.isSelected()) {
            int mode = Cipher.DECRYPT_MODE;
            ControllerEncryption.decryptRSA(mode, filePath, keyFilePath);
        }
    }
}
